from urllib.request import urlopen
from urllib.parse import quote

import json
import csv
from datetime import datetime

# Subset of kaggle dataset, generated by kaggle_21st_century_movies.py
# Contains release year, title, and wiki page of films released in 21st century
movies_csv_file = 'kaggle_21st_century_movies.csv'   

# OMDb API
base_url = "http://www.omdbapi.com"
api_key = "9e3a45e7" 
url = "http://www.omdbapi.com/?apikey=dee414e1&i=tt0417741"
# Call the API with title and release year
title_to_search = ''
year_of_released_to_search = ''

# api_keys 
# 3a0726c5
# 26629c10
# dee414e1
# 63112cd8
# 29c17731
# 54351ede 
# 9e3a45e7

def get_movie_by_title_and_released_year(year, title, wiki_url):
    url = "{}/?apikey={}&y={}&t={}".format(base_url, api_key, year, quote(title))
    response = urlopen(url)
    if response.getcode() == 401:
        print("Need new API key")
    data_json = json.loads(response.read())

    # Attributes returned by API to write to output file of combined data (from 2 data sources)
    imdbID = data_json['imdbID']
    Title = data_json['Title']
    Year = data_json['Year']
    Rated = data_json['Rated'] 
    Released = datetime.strptime(data_json['Released'], '%d %b %Y').strftime("%Y-%m-%d") # YYYY-MM-DD
    Runtime = data_json['Runtime'].split(' ')[0] # 153 min > 153
    Genre = data_json['Genre']
    Director = data_json['Director']
    Writer = data_json['Writer'] 
    Actors = data_json['Actors'] 
    Plot = data_json['Plot'] 
    Language = data_json['Language'] 
    Country = data_json['Country'] 
    Awards = data_json['Awards'] 
    Metascore = data_json['Metascore']
    imdbRating = data_json['imdbRating']
    imdbVotes = data_json['imdbVotes'].replace(',','')
    DVDReleased = datetime.strptime(data_json['DVD'], '%d %b %Y').strftime("%Y-%m-%d")
    BoxOffice = data_json['BoxOffice'].replace('$','').replace(',','')
    # Attribute from kaggle csv to write to output file
    WikiURL = wiki_url

    attributes = [imdbID, Title, Year, Rated, Released, Runtime, Genre, Director, Writer, Actors, Plot, Language, Country, Awards, Metascore, imdbRating, imdbVotes, DVDReleased, BoxOffice, WikiURL]
    proceeded_data = ''
    for attribute in attributes:
        proceeded_data += attribute + '|' 
    with open("movies_data_combined.csv", "a") as file_object:
            # write movie data to output file
            file_object.write(proceeded_data)
            file_object.write('\n')


def read_movies_from_csv(csv_filename):
    with open(csv_filename, newline='\n') as csvfile:
        reader = csv.reader(csvfile, delimiter='|')
        for row in reader:
            try:
                get_movie_by_title_and_released_year(row[0], row[1], row[2])
            except:
                # API call didn't succeed 
                pass
    
read_movies_from_csv(movies_csv_file)
